@charset "UTF-8";
/* Functions
 *
 * px-to-rem() | px-to-em()   — convert PX to EM or REM
 * color()                    — pick color from palette
 * weight()                   — set font-weight property
 * z()                        — set z-index property
 * breakpoint()               — set breakpoint name from the list below as an argument. Number value will converted to REM
 *
 */
/* Mixins
 *
 * font                  — Set font size & weight. Pass third parameter as 'gradient' to add CSS rules for gradient support
 * flex                  — Set element flex properties
 * touch                 — Set pointer-events and user-select CSS properties
 * position              — Set element z-index and position
 * padding               — Set element paddings
 * centering-flex        — Centering element with flex properties
 * centering-position    — Centering element with position and transform properties
 * tr                    — Transitions
 * width                 — Set element width and max-width
 * square                — Set equal width & height
 * square-max            — Set equal width, height, max-width & max-height
 * ratio-sn-land         — Set 16:9 ratio (Landscape)
 * ratio-sn-port         — Set 16:9 ratio (Portrait)
 * ratio-a4-land         — Set 99:70 ratio (A4, Landscape)
 * ratio-a4-port         — Set 99:70 ratio (A4, Portrait)
 * scrollbar             — Change scroll bar colors
 * placeholder           — Change input placeholder style
 * placeholder-remove    — Remove placeholder on click
 * input-autofill        — Change autofill color
 * clearfix              — Add clearfix for floating elements
 *
 */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

html {
  font-family: "Arial", sans-serif;
  font-size: 100%;
  font-weight: normal; }

body {
  font-size: 1rem;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased; }

p, span {
  line-height: 1; }

html,
body {
  height: 100%; }

html {
  overflow-y: scroll; }
  html,
  html *:not(img) {
    box-sizing: border-box; }

body {
  color: var(--default);
  position: relative;
  display: flex;
  justify-content: flex-start;
  align-items: stretch;
  flex-direction: column;
  flex-wrap: nowrap; }

*:not(img) {
  outline: none;
  margin: 0;
  padding: 0; }
  *:not(img):before, *:not(img):after {
    box-sizing: inherit; }

section {
  position: relative; }

ul,
ol {
  list-style: none;
  padding: 0; }

svg {
  width: 100%;
  height: 100%; }

img,
object,
embed {
  height: auto;
  max-width: 100%; }

button {
  cursor: pointer; }

button,
fieldset,
input,
textarea {
  background: none;
  border: none;
  border-radius: 0;
  transition: all 0.2s ease-in-out; }

input,
textarea {
  -moz-appearance: textfield;
  -webkit-appearance: none; }

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0; }

input[type=number] {
  -moz-appearance: textfield; }

form {
  position: relative; }

a,
a:hover,
a:active,
a:focus,
a:visited {
  color: inherit;
  text-decoration: none;
  transition: all 0.2s ease-in-out; }

.main-content {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  flex-wrap: nowrap;
  transition: all 0.2s ease-in-out;
  height: 100%; }

.container {
  width: 100%;
  height: inherit;
  margin: 0 auto;
  padding: 0 1.875rem;
  position: relative; }

.update-pending {
  display: block;
  text-align: center;
  width: 100%; }

.button-holder {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%; }

.link-block {
  display: block;
  width: 100%;
  height: 100%;
  position: relative; }

.text-no-wrap {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

.video-player {
  padding-bottom: 56.25%;
  height: 0;
  position: relative; }
  .video-player iframe,
  .video-player img {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0; }

.dn,
.svg-sprite {
  display: none !important; }

.sf {
  flex: 1; }

.backspace {
  backface-visibility: hidden; }

.loader {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  flex-wrap: nowrap;
  z-index: 9999;
  position: fixed;
  top: 0rem;
  right: 0rem;
  bottom: 0rem;
  left: 0rem;
  user-select: none;
  pointer-events: none;
  transition: all 0.2s ease-in-out;
  background: var(--white);
  width: 100%;
  height: 100%;
  opacity: 1; }
  .loader .logo {
    width: 50vw;
    max-width: 18.75rem;
    margin-bottom: 4.6875rem; }
    .loader .logo img {
      height: auto;
      width: 100%;
      max-width: 18.75rem;
      margin: 0 auto; }
  .loader .spinner {
    width: 4.375rem;
    height: 4.375rem; }
    .loader .spinner img,
    .loader .spinner svg {
      width: 100%; }

body .main-content {
  user-select: none;
  pointer-events: none;
  opacity: 0; }

body.loading {
  overflow: hidden; }

body.loaded .loader {
  opacity: 0; }

body.loaded .main-content {
  user-select: auto;
  pointer-events: auto;
  opacity: 1; }

a.button,
button.button {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  flex-wrap: nowrap;
  background: var(--primary); }
  a.button:hover,
  button.button:hover {
    background: var(--secondary); }

.back-to-top {
  z-index: 9999;
  position: fixed;
  top: auto;
  right: 1.875rem;
  bottom: 1.875rem;
  left: auto;
  height: 2.8125em;
  width: 2.8125em;
  overflow: hidden;
  visibility: hidden;
  opacity: 0; }
  .back-to-top.btt-is-visible {
    visibility: visible;
    opacity: 1; }
  .back-to-top.btt-fade-out {
    opacity: .5; }
    .back-to-top.btt-fade-out:hover {
      opacity: 1; }
  .no-touch .back-to-top:hover {
    opacity: 1; }
  .back-to-top svg {
    fill: var(--white); }

[type="checkbox"]:not(:checked),
[type="checkbox"]:checked,
[type="radio"]:not(:checked),
[type="radio"]:checked {
  position: absolute;
  left: -624.9375rem; }

[type="checkbox"]:not(:checked) + label,
[type="checkbox"]:checked + label,
[type="radio"]:not(:checked) + label,
[type="radio"]:checked + label {
  cursor: pointer;
  padding-left: 1.875em;
  position: relative; }

[type="checkbox"]:not(:checked) + label::before,
[type="checkbox"]:checked + label::before,
[type="checkbox"]:not(:checked) + label::after,
[type="checkbox"]:checked + label::after,
[type="radio"]:not(:checked) + label::before,
[type="radio"]:checked + label::before,
[type="radio"]:not(:checked) + label::after,
[type="radio"]:checked + label::after {
  width: 1.25rem;
  height: 1.25rem;
  z-index: 0;
  position: absolute;
  top: auto;
  right: auto;
  bottom: auto;
  left: 0rem;
  transition: all 0.075s ease-in-out;
  transform: translateY(-50%);
  top: 50%; }

[type="checkbox"]:not(:checked) + label::before,
[type="checkbox"]:checked + label::before {
  content: '';
  background: url("../icons/checkbox.svg") no-repeat center center;
  background-size: contain; }

[type="radio"]:not(:checked) + label::before,
[type="radio"]:checked + label::before {
  content: '';
  background: url("../icons/radio.svg") no-repeat center center;
  background-size: contain; }

[type="checkbox"]:not(:checked) + label::after,
[type="checkbox"]:checked + label::after {
  content: '';
  background: url("../icons/checkbox-active.svg") no-repeat center center;
  background-size: contain; }

[type="radio"]:not(:checked) + label::after,
[type="radio"]:checked + label::after {
  content: '';
  background: url("../icons/radio-active.svg") no-repeat center center;
  background-size: contain; }

[type="checkbox"]:not(:checked) + label::after,
[type="radio"]:not(:checked) + label::after {
  opacity: 0; }

[type="checkbox"]:checked + label::after,
[type="radio"]:checked + label::after {
  opacity: 1; }

.header {
  padding: 3.125rem 0;
  z-index: 999;
  position: fixed;
  top: 0rem;
  right: 0rem;
  bottom: auto;
  left: 0rem;
  transition: all 0.2s ease-in-out; }
  .header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap; }
  .header .logo img {
    max-width: 4.375rem; }
  .header .menu-panel {
    transition: all 0.2s ease-in-out; }
  .header.on-scroll {
    background: var(--white);
    box-shadow: 1px 1px 20px -6px rgba(var(--default), 0.45);
    padding: 1.875rem 0; }

body.it-is-mobile .header {
  padding: 1.5625rem 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
